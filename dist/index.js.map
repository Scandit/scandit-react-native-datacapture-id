{"version":3,"file":"index.js","sources":["../ts/native/IdCaptureProxy.ts","../ts/native/IdCaptureListenerProxy.ts","../ts/native/initProxy.ts","../ts/private/initDefaults.ts","../ts/index.ts"],"sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native';\n// tslint:disable:variable-name\nconst NativeModule = NativeModules.ScanditDataCaptureId;\nconst RNEventEmitter = new NativeEventEmitter(NativeModule);\n// tslint:enable:variable-name\nexport class NativeIdCaptureProxy {\n    resetMode() {\n        return NativeModule.reset();\n    }\n    verifyCapturedId(capturedId) {\n        return NativeModule.verifyCapturedId(capturedId);\n    }\n    createContextForBarcodeVerification(contextJSON) {\n        return NativeModule.createContextForBarcodeVerification(contextJSON);\n    }\n    verifyCapturedIdAsync(capturedId) {\n        return NativeModule.verifyCapturedIdAsync(capturedId);\n    }\n    verifyVizMrz(capturedId) {\n        return NativeModule.verifyVizMrz(capturedId);\n    }\n    setModeEnabledState(enabled) {\n        NativeModule.setModeEnabledState(enabled);\n    }\n    updateIdCaptureMode(modeJson) {\n        return NativeModule.updateIdCaptureMode(modeJson);\n    }\n    applyIdCaptureModeSettings(newSettingsJson) {\n        return NativeModule.applyIdCaptureModeSettings(newSettingsJson);\n    }\n    updateIdCaptureOverlay(overlayJson) {\n        return NativeModule.updateIdCaptureOverlay(overlayJson);\n    }\n    updateFeedback(feedbackJson) {\n        return NativeModule.updateIdCaptureFeedback(feedbackJson);\n    }\n}\n//# sourceMappingURL=IdCaptureProxy.js.map","import { NativeEventEmitter, NativeModules } from 'react-native';\nimport { FactoryMaker } from 'scandit-datacapture-frameworks-core';\nimport { IdCaptureListenerEvents } from 'scandit-datacapture-frameworks-id';\n// tslint:disable:variable-name\nconst NativeModule = NativeModules.ScanditDataCaptureId;\nconst RNEventEmitter = new NativeEventEmitter(NativeModule);\n// tslint:enable:variable-name\nexport class NativeIdCaptureListenerProxy {\n    nativeListeners = [];\n    eventEmitter;\n    constructor() {\n        this.eventEmitter = FactoryMaker.getInstance('EventEmitter');\n    }\n    isModeEnabled = () => false;\n    subscribeDidCaptureListener() {\n        const didCaptureListener = RNEventEmitter.addListener(IdCaptureListenerEvents.didCapture, (body) => {\n            this.eventEmitter.emit(IdCaptureListenerEvents.didCapture, body);\n        });\n        this.nativeListeners.push(didCaptureListener);\n    }\n    subscribeDidLocalizeListener() {\n        const didLocalizeListener = RNEventEmitter.addListener(IdCaptureListenerEvents.didLocalize, (body) => {\n            this.eventEmitter.emit(IdCaptureListenerEvents.didLocalize, body);\n        });\n        this.nativeListeners.push(didLocalizeListener);\n    }\n    subscribeDidRejectListener() {\n        const didRejectListener = RNEventEmitter.addListener(IdCaptureListenerEvents.didReject, (body) => {\n            this.eventEmitter.emit(IdCaptureListenerEvents.didReject, body);\n        });\n        this.nativeListeners.push(didRejectListener);\n    }\n    subscribeDidTimeOutListener() {\n        // perhaps rename this to a token\n        const didTimeOutListener = RNEventEmitter.addListener(IdCaptureListenerEvents.didTimeOut, (body) => {\n            this.eventEmitter.emit(IdCaptureListenerEvents.didTimeOut, body);\n        });\n        this.nativeListeners.push(didTimeOutListener);\n    }\n    unregisterListenerForEvents() {\n        this.nativeListeners.forEach(listener => listener.remove());\n        this.nativeListeners = [];\n    }\n    finishDidCaptureCallback(isEnabled) {\n        NativeModule.finishDidCaptureCallback(isEnabled);\n    }\n    finishDidLocalizeCallback(isEnabled) {\n        NativeModule.finishDidLocalizeCallback(isEnabled);\n    }\n    finishDidRejectCallback(isEnabled) {\n        NativeModule.finishDidRejectCallback(isEnabled);\n    }\n    finishDidTimeOutCallback(isEnabled) {\n        NativeModule.finishDidTimeOutCallback(isEnabled);\n    }\n}\n//# sourceMappingURL=IdCaptureListenerProxy.js.map","import { FactoryMaker } from 'scandit-datacapture-frameworks-core';\nimport { NativeIdCaptureProxy } from './IdCaptureProxy';\nimport { NativeIdCaptureListenerProxy } from './IdCaptureListenerProxy';\nexport function initIdProxy() {\n    FactoryMaker.bindInstance('IdCaptureProxy', new NativeIdCaptureProxy());\n    FactoryMaker.bindInstance('IdCaptureListenerProxy', new NativeIdCaptureListenerProxy());\n}\n//# sourceMappingURL=initProxy.js.map","import { NativeModules } from 'react-native';\nimport { initCoreDefaults } from 'scandit-react-native-datacapture-core';\nimport { loadIdDefaults } from 'scandit-datacapture-frameworks-id';\nconst dataCaptureId = NativeModules.ScanditDataCaptureId;\nexport function initIdDefaults() {\n    initCoreDefaults();\n    loadIdDefaults(dataCaptureId.Defaults);\n}\n//# sourceMappingURL=initDefaults.js.map","import { initIdProxy } from './native/initProxy';\nimport { initIdDefaults } from './private/initDefaults';\ninitIdDefaults();\ninitIdProxy();\nexport { ComparisonCheckResult, DateResult, IdAnonymizationMode, IdDocumentType, IdImageType, LocalizedOnlyId, RejectedId, SupportedSides, TextHintPosition } from 'scandit-datacapture-frameworks-id';\nexport { AAMVABarcodeResult, AamvaBarcodeVerificationResult, AamvaBarcodeVerificationStatus, AamvaBarcodeVerifier, AamvaVizBarcodeComparisonResult, AamvaVizBarcodeComparisonVerifier, ApecBusinessTravelCardMrzResult, ArgentinaIdBarcodeResult, CapturedId, CapturedResultType, ChinaExitEntryPermitMRZResult, ChinaMainlandTravelPermitMRZResult, ChinaOneWayPermitBackMrzResult, ChinaOneWayPermitFrontMrzResult, ColombiaDlBarcodeResult, ColombiaIdBarcodeResult, CommonAccessCardBarcodeResult, DocumentType, MRZResult, ProfessionalDrivingPermit, SouthAfricaDlBarcodeResult, SouthAfricaIdBarcodeResult, USUniformedServicesBarcodeResult, USVisaVIZResult, VehicleRestriction, VizMrzComparisonCheckResult, VizMrzComparisonResult, VizMrzComparisonVerifier, VIZResult } from 'scandit-datacapture-frameworks-id';\nexport { IdCaptureController, IdCaptureListenerController, IdCaptureListenerEvents } from 'scandit-datacapture-frameworks-id';\nexport { IdCapture, IdCaptureError, IdCaptureFeedback, IdCaptureOverlay, IdCaptureSession, IdCaptureSettings, IdLayout, IdLayoutLineStyle, IdLayoutStyle, RejectionReason } from 'scandit-datacapture-frameworks-id';\n//# sourceMappingURL=index.js.map"],"names":["NativeModule"],"mappings":"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"}